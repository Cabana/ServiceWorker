var cacheName="v1.0.0";var cacheList=["/resources/css/app.css","/resources/js/app.js","/resources/js/3f.js","/resources/images/3f.gif","/resources/fonts/icomoon.ttf","/resources/fonts/icomoon.woff","/resources/fonts/3fmax-bold.woff","/resources/fonts/3fmax-bold.ttf","/resources/fonts/3fmax-regular.woff","/resources/fonts/3fmax-regular.ttf"];var fetchResource=function(request,cache){return fetch(request.clone()).then(function(networkResponse){return cache&&cache.put(cleanRequest(request.clone()),networkResponse.clone()).then(function(){}),networkResponse})["catch"](function(error){console.warn("Something went wrong fetching",request.url,error)})};var noCacheRequest=function(request){var newRequest={};newRequest.clone=request,newRequest.url=new URL(newRequest.clone.url);var newDate=(new Date).getTime();return newRequest.url.search?newRequest.url.search+="&t="+newDate:newRequest.url.search="?t="+newDate,newRequest.request=new Request(newRequest.url.href),newRequest};var cleanRequest=function(request){var url=null;try{url=new URL(request.url)}catch(e){url=!1}return 0!=url&&(url.search=""),new Request(url)};var isOnline=function(){return"onLine"in navigator?navigator.onLine:!0};self.addEventListener("install",function(event){self.skipWaiting&&self.skipWaiting(),event.waitUntil(caches.open(cacheName).then(function(cache){return cache.addAll(cacheList)}))}),self.addEventListener("fetch",function(event){var requestURL=new URL(event.request.clone().url);requestURL.protocol.indexOf("chrome-extension")>-1||(cacheList.indexOf(requestURL.pathname)>-1?event.respondWith(caches.open(cacheName).then(function(cache){return cache.match(cleanRequest(event.request.clone())).then(function(cacheResponse){var newRequest=noCacheRequest(event.request.clone());return cacheResponse?(fetchResource(newRequest.request,cache),cacheResponse):fetchResource(newRequest.request,cache)})})):event.respondWith(caches.open("offline"+cacheName).then(function(cache){return isOnline()?fetchResource(event.request.clone(),cache):(console.warn("You're offline!","Now looking for",cleanRequest(event.request.clone())),cache.match(cleanRequest(event.request.clone())).then(function(cacheResponse){return cacheResponse?(fetchResource(noCacheRequest(event.request.clone()).request,cache),cacheResponse):fetchResource(event.request.clone(),cache)}))})))}),self.addEventListener("activate",function(event){});